// Mux 2 to 1
// design file 

module mux2to1 (
    input wire a,
    input wire b,
    input wire sel,
    output wire y
);
    assign y = sel ? b : a;  // If sel is 1, output b; else output a
endmodule


// tb of mux2 to 1
module tb_mux2to1;
    // Declare testbench variables
    reg a;             // Input a
    reg b;             // Input b
    reg sel;           // Select line
    wire y;           // Output

    // Instantiate the multiplexer
    mux2to1 uut (
        .a(a),
        .b(b),
        .sel(sel),
        .y(y)
    );

    // Test sequence
    initial begin
        // Display header
        $display("Time\t a\t b\t sel\t y");
        $monitor("%g\t %b\t %b\t %b\t %b", $time, a, b, sel, y);
        
        // Test all combinations
        a = 0; b = 0; sel = 0; #10; // Expect y = 0
        a = 0; b = 0; sel = 1; #10; // Expect y = 0
        a = 0; b = 1; sel = 0; #10; // Expect y = 0
        a = 0; b = 1; sel = 1; #10; // Expect y = 1
        a = 1; b = 0; sel = 0; #10; // Expect y = 1
        a = 1; b = 0; sel = 1; #10; // Expect y = 0
        a = 1; b = 1; sel = 0; #10; // Expect y = 1
        a = 1; b = 1; sel = 1; #10; // Expect y = 1

        // End simulation
        $finish;
    end
endmodule

https://www.edaplayground.com/x/uEW3
